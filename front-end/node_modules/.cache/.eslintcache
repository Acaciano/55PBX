[{"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/index.tsx":"1","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/App.tsx":"2","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/styles/global.ts":"3","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/routes/index.tsx":"4","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/routes/Route.tsx":"5","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/Dashboard/index.tsx":"6","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/services/api.ts":"7","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/Dashboard/styles.ts":"8","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/utils/getValidationErrors.ts":"9"},{"size":196,"mtime":1623472950000,"results":"10","hashOfConfig":"11"},{"size":302,"mtime":1655479118532,"results":"12","hashOfConfig":"11"},{"size":526,"mtime":1623472950000,"results":"13","hashOfConfig":"11"},{"size":344,"mtime":1655470588219,"results":"14","hashOfConfig":"11"},{"size":549,"mtime":1655479071865,"results":"15","hashOfConfig":"11"},{"size":1722,"mtime":1655570236268,"results":"16","hashOfConfig":"11"},{"size":116,"mtime":1655478866447,"results":"17","hashOfConfig":"11"},{"size":2184,"mtime":1655542366841,"results":"18","hashOfConfig":"11"},{"size":385,"mtime":1623472950000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"sfljj0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/index.tsx",[],["42","43"],"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/App.tsx",[],"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/styles/global.ts",[],"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/routes/index.tsx",[],"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/routes/Route.tsx",["44"],"import React from 'react';\nimport { RouteProps as ReactDomRouteProps, Route as ReactDomRoute, Redirect } from 'react-router-dom';\n\ninterface RouteProps extends ReactDomRouteProps {\n    isPrivate?: boolean,\n    component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({ isPrivate = false, component: Component, ...rest }) => {\n\n    return (\n        <ReactDomRoute\n            {...rest}\n            render={({ location }) => {\n                return  <Component />;\n            }\n            }\n        />\n    )\n};\n\nexport default Route;","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/Dashboard/index.tsx",["45","46","47","48","49"],"import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"react-day-picker/lib/style.css\";\nimport ImageStorage from \"../../models/imageStorage\";\n\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Profile,\n  Content,\n  ImagesProfile,\n  NextBaseUrlImage,\n} from \"./styles\";\n\nconst Dashboard: React.FC = () => {\n  const socket = io(\"http://localhost:3001\");\n\n  const [images, setImages] = useState<ImageStorage[]>([]);\n\n  const handlerLoadImages = useCallback(() => {\n    socket.emit(\"images.init\", {});\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.on(\"lstImages.message\", (data) => {\n        console.log('recebendo mensagem: ', data);\n        setImages(data);\n      });\n    });\n  }, [images]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <Profile>\n            <div>\n              <span>Bem-vindo,</span>\n              <strong> 55PBX </strong>\n            </div>\n          </Profile>\n        </HeaderContent>\n      </Header>\n\n      <Content>\n        <ImagesProfile>\n          <a onClick={() => handlerLoadImages()}>\n            Click aqui para iniciar a captura\n          </a>\n          <h1>Imagens capturadas</h1>\n          <strong>Depois que iniciar a captura, as imagens s√£o carregadas automaticamentes pelo SocketIO</strong>\n          {images.map((image) => (\n            <NextBaseUrlImage key={image.id}>\n              <div key={image.id}>\n                <img src={image.url} />\n                <strong>{image.baseUrl}</strong>\n              </div>\n            </NextBaseUrlImage>\n          ))}\n        </ImagesProfile>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/services/api.ts",[],"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/Dashboard/styles.ts",["50"],"import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div``;\n\nexport const Header = styled.header`\n  padding: 32px 0;\n  background: #28262e;\n`;\n\nexport const HeaderContent = styled.div`\n  max-width: 1120px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    width: 56px;\n    height: 56px;\n    border-radius: 50%;\n  }\n\n  strong {\n    color: #ff9000;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 16px;\n    line-height: 24px;\n\n    span {\n      color: #f4ede8;\n    }\n\n    a {\n      text-decoration: none;\n      color: #ff9000;\n\n      &:hover {\n        opacity: 0.8;\n      }\n    }\n  }\n`;\n\nexport const Content = styled.main`\n  max-width: 1120px;\n  margin: 64px auto;\n  display: flex;\n`;\n\nexport const ImagesProfile = styled.div`\n  flex: 1;\n  margin-right: 120px;\n\n  h1 {\n    font-size: 36px;\n  }\n\n  a {\n    cursor: pointer;\n  }\n  \n  p {\n    margin-top: 8px;\n    color: #ff9000;\n    display: flex;\n    align-items: center;\n    font-weight: 500;\n  \n\n    span {\n      display: flex;\n      align-items: center;\n    }\n\n    span + span::before {\n      content: \"\";\n      width: 1px;\n      height: 12px;\n      background: #ff9000;\n      margin: 0 8px;\n    }\n  }\n`;\n\nexport const NextBaseUrlImage = styled.div`\n  margin-top: 64px;\n\n  > strong {\n    color: #999591;\n    font-size: 20px;\n    font-weight: 400;\n  }\n\n  div {\n    background: #3e3b47;\n    display: flex;\n    align-items: center;\n    padding: 16px 24px;\n    border-radius: 10px;\n    margin-top: 24px;\n    position: relative;\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      height: 80%;\n      width: 1px;\n      left: 0;\n      top: 10%;\n      background: #ff9000;\n    }\n\n    img {\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n      background: #ff9000;\n    }\n\n    strong {\n      margin-left: 24px;\n      color: #fff;\n    }\n\n    span {\n      margin-left: auto;\n      display: flex;\n      align-items: center;\n      color: #999591;\n\n      svg {\n        color: #ff9000;\n        margin-right: 8px;\n      }\n    }\n  }\n`;\n","/Users/acaciano/Projects/2a/55PBXTest/front-end/src/utils/getValidationErrors.ts",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":68,"nodeType":"57","messageId":"58","endLine":2,"endColumn":76},{"ruleId":"55","severity":1,"message":"59","line":1,"column":41,"nodeType":"57","messageId":"58","endLine":1,"endColumn":48},{"ruleId":"60","severity":1,"message":"61","line":23,"column":6,"nodeType":"62","endLine":23,"endColumn":8,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":32,"column":6,"nodeType":"62","endLine":32,"endColumn":14,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":49,"column":11,"nodeType":"68","endLine":49,"endColumn":50},{"ruleId":"69","severity":1,"message":"70","line":57,"column":17,"nodeType":"68","endLine":57,"endColumn":40},{"ruleId":"55","severity":1,"message":"71","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":15},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["75"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'shade' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [socket]",{"range":"80","text":"81"},"Update the dependencies array to be: [images, socket]",{"range":"82","text":"83"},[570,572],"[socket]",[777,785],"[images, socket]"]