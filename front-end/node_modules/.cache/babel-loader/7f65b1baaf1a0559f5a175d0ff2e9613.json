{"ast":null,"code":"var _jsxFileName = \"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { useAuth } from '../../hooks/auth';\nimport { Container, Header, HeaderContent, Profile, Content, Schedule, NextAppointment, Section, Appointment, Calendar } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\nimport { FiClock, FiPower } from 'react-icons/fi';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n;\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    signOut,\n    user\n  } = useAuth();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [appointments, setAppointments] = useState([]);\n  const [monthAvailability, setMonthAvailability] = useState([]);\n  const handleMonthChange = useCallback(month => {\n    setCurrentMonth(month);\n  }, []);\n  const handleDateChange = useCallback((day, modifiers) => {\n    if (modifiers.available && !modifiers.disabled) {\n      setSelectedDate(day);\n    }\n  }, []);\n  useEffect(() => {\n    let year = currentMonth.getFullYear();\n    let month = currentMonth.getMonth() + 1;\n    api.get(`/v1/appointment/monthAvailability/${year}/${month}`, {}).then(response => {\n      setMonthAvailability(response.data.data);\n    });\n  }, [currentMonth]);\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability.filter(monthDay => monthDay.available === false).map(monthDay => {\n      const year = currentMonth.getFullYear();\n      const month = currentMonth.getMonth();\n      return new Date(year, month, monthDay.day);\n    });\n    return dates;\n  }, [currentMonth, monthAvailability]);\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, \"cccc\", {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  useEffect(() => {\n    let year = selectedDate.getFullYear();\n    let month = selectedDate.getMonth() + 1;\n    let day = selectedDate.getDate();\n    api.get(`/v1/appointment/me/${year}/${month}/${day}`, {}).then(response => {\n      const appointmentsFormatted = response.data.data.map(appointment => {\n        return { ...appointment,\n          hourFormatted: format(parseISO(appointment.dateAppointment), 'HH:mm')\n        };\n      });\n      setAppointments(appointmentsFormatted);\n    });\n  }, [selectedDate]);\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.dateAppointment).getHours() < 12;\n    });\n  }, [appointments]);\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.dateAppointment).getHours() > 12;\n    });\n  }, [appointments]);\n  const eveningAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.dateAppointment).getHours() > 18;\n    });\n  }, [appointments]);\n  const nextAppointment = useMemo(() => {\n    return appointments.find(appointment => isAfter(parseISO(appointment.dateAppointment), new Date()));\n  }, [appointments]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(HeaderContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"SGBarber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Bem-vindo,\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/profile\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", user.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: signOut,\n          children: /*#__PURE__*/_jsxDEV(FiPower, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Schedule, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hor\\xE1rios agendados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [isToday(selectedDate) && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Hoje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedDateAsText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedWeekDay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), isToday(selectedDate) && nextAppointment && /*#__PURE__*/_jsxDEV(NextAppointment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Agendamento a seguir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: 'data:image/png;base64,' + nextAppointment.person.avatar,\n              alt: nextAppointment.person.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: nextAppointment.person.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), nextAppointment.hourFormatted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Manh\\xE3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), morningAppointments.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nenhum agendamento neste per\\xEDodo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), morningAppointments.map(appointment => /*#__PURE__*/_jsxDEV(Appointment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), appointment.hourFormatted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: 'data:image/png;base64,' + appointment.person.avatar,\n                alt: appointment.person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", appointment.person.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)]\n          }, appointment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tarde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), afternoonAppointments.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nenhum agendamento neste per\\xEDodo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), afternoonAppointments.map(appointment => /*#__PURE__*/_jsxDEV(Appointment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), appointment.hourFormatted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: 'data:image/png;base64,' + appointment.person.avatar,\n                alt: appointment.person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", appointment.person.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)]\n          }, appointment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Noite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), eveningAppointments.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nenhum agendamento neste per\\xEDodo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), eveningAppointments.map(appointment => /*#__PURE__*/_jsxDEV(Appointment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), appointment.hourFormatted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: 'data:image/png;base64,' + appointment.person.avatar,\n                alt: appointment.person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", appointment.person.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this)]\n          }, appointment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        children: /*#__PURE__*/_jsxDEV(DayPicker, {\n          weekdaysShort: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\n          fromMonth: new Date(),\n          disabledDays: [{\n            daysOfWeek: []\n          }, ...disabledDays],\n          modifiers: {\n            available: {\n              daysOfWeek: [0, 1, 2, 3, 4, 5, 6]\n            }\n          },\n          onMonthChange: handleMonthChange,\n          selectedDays: selectedDate,\n          onDayClick: handleDateChange,\n          months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"LXI8g8J2ZoNizWi8Tair2vMxuxw=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/Dashboard/index.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","DayPicker","isToday","format","parseISO","isAfter","ptBR","useAuth","Container","Header","HeaderContent","Profile","Content","Schedule","NextAppointment","Section","Appointment","Calendar","FiClock","FiPower","api","Link","Dashboard","signOut","user","selectedDate","setSelectedDate","Date","currentMonth","setCurrentMonth","appointments","setAppointments","monthAvailability","setMonthAvailability","handleMonthChange","month","handleDateChange","day","modifiers","available","disabled","year","getFullYear","getMonth","get","then","response","data","disabledDays","dates","filter","monthDay","map","selectedDateAsText","locale","selectedWeekDay","getDate","appointmentsFormatted","appointment","hourFormatted","dateAppointment","morningAppointments","getHours","afternoonAppointments","eveningAppointments","nextAppointment","find","logoImg","name","person","avatar","length","id","daysOfWeek"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { isToday, format, parseISO, isAfter } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\n\nimport { useAuth } from '../../hooks/auth';\n\nimport { Container, Header, HeaderContent, Profile, Content, Schedule, NextAppointment, Section, Appointment, Calendar } from './styles'\n\nimport logoImg from '../../assets/logo.svg';\nimport { FiClock, FiPower } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport ResponseBase from '../../models/ResponseBase';\nimport { Link } from 'react-router-dom';\n\ninterface MonthAvailabilityItem {\n    day: number;\n    available: boolean;\n};\n\ninterface AppointmentItem {\n    id: string;\n    dateAppointment: string;\n    hourFormatted: string;\n    person: {\n        name: string;\n        avatar: string;\n    }\n};\n\nconst Dashboard: React.FC = () => {\n    const { signOut, user } = useAuth();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [currentMonth, setCurrentMonth] = useState(new Date());\n    const [appointments, setAppointments] = useState<AppointmentItem[]>([]);\n\n    const [monthAvailability, setMonthAvailability] = useState<MonthAvailabilityItem[]>([]);\n\n    const handleMonthChange = useCallback((month: Date) => {\n        setCurrentMonth(month);\n    }, []);\n\n    const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n        if (modifiers.available && !modifiers.disabled) {\n            setSelectedDate(day);\n        }\n    }, []);\n\n    useEffect(() => {\n        let year = currentMonth.getFullYear();\n        let month = currentMonth.getMonth() + 1;\n        api.get(`/v1/appointment/monthAvailability/${year}/${month}`, {\n        }).then(response => {\n            setMonthAvailability(response.data.data);\n        })\n    }, [currentMonth])\n\n    const disabledDays = useMemo(() => {\n        const dates = monthAvailability\n            .filter(monthDay => monthDay.available === false)\n            .map(monthDay => {\n                const year = currentMonth.getFullYear();\n                const month = currentMonth.getMonth();\n\n                return new Date(year, month, monthDay.day);\n            });\n\n        return dates;\n    }, [currentMonth, monthAvailability]);\n\n    const selectedDateAsText = useMemo(() => {\n        return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n            locale: ptBR\n        });\n    }, [selectedDate]);\n\n    const selectedWeekDay = useMemo(() => {\n        return format(selectedDate, \"cccc\", {\n            locale: ptBR\n        });\n    }, [selectedDate])\n\n    useEffect(() => {\n        let year = selectedDate.getFullYear();\n        let month = selectedDate.getMonth() + 1;\n        let day = selectedDate.getDate();\n\n        api.get<ResponseBase<AppointmentItem[]>>(`/v1/appointment/me/${year}/${month}/${day}`, {\n        }).then(response => {\n            const appointmentsFormatted = response.data.data.map(appointment => {\n                return {\n                    ...appointment,\n                    hourFormatted: format(parseISO(appointment.dateAppointment), 'HH:mm'),\n                };\n            });\n            setAppointments(appointmentsFormatted);\n        })\n    }, [selectedDate]);\n\n    const morningAppointments = useMemo(() => {\n        return appointments.filter(appointment => {\n            return parseISO(appointment.dateAppointment).getHours() < 12;\n        });\n    }, [appointments]);\n\n    const afternoonAppointments = useMemo(() => {\n        return appointments.filter(appointment => {\n            return parseISO(appointment.dateAppointment).getHours() > 12;\n        });\n    }, [appointments]);\n\n    const eveningAppointments = useMemo(() => {\n        return appointments.filter(appointment => {\n            return parseISO(appointment.dateAppointment).getHours() > 18;\n        });\n    }, [appointments]);\n\n    const nextAppointment = useMemo(() => {\n        return appointments.find(appointment =>\n            isAfter(parseISO(appointment.dateAppointment), new Date()),\n        );\n    }, [appointments]);\n\n    return (\n        <Container>\n            <Header>\n                <HeaderContent>\n                    <img src={logoImg} alt=\"SGBarber\" />\n\n                    <Profile>\n                        <img alt={user.name} />\n                        <div>\n                            <span>Bem-vindo,</span>\n                            <Link to=\"/profile\">\n                                <strong> {user.name} </strong>\n                            </Link>\n                        </div>\n                    </Profile>\n\n                    <button type=\"button\" onClick={signOut}>\n                        <FiPower />\n                    </button>\n\n                </HeaderContent>\n            </Header>\n\n            <Content>\n                <Schedule>\n                    <h1>Horários agendados</h1>\n                    <p>\n                        {isToday(selectedDate) && <span>Hoje</span>}\n                        <span>{selectedDateAsText}</span>\n                        <span>{selectedWeekDay}</span>\n                    </p>\n\n                    {isToday(selectedDate) && nextAppointment && (\n                        <NextAppointment>\n                            <strong>Agendamento a seguir</strong>\n                            <div>\n                                <img src={'data:image/png;base64,' + nextAppointment.person.avatar} alt={nextAppointment.person.name} />\n\n                                <strong>{nextAppointment.person.name}</strong>\n                                <span>\n                                    <FiClock />\n                                    {nextAppointment.hourFormatted}\n                                </span>\n                            </div>\n                        </NextAppointment>\n                    )}\n\n                    <Section>\n                        <strong>Manhã</strong>\n\n                        {morningAppointments.length === 0 && (\n                            <p>Nenhum agendamento neste período</p>\n                        )}\n\n                        {morningAppointments.map(appointment => (\n                            <Appointment key={appointment.id}>\n                                <span>\n                                    <FiClock />\n                                    {appointment.hourFormatted}\n                                </span>\n\n                                <div>\n                                    <img src={'data:image/png;base64,' + appointment.person.avatar} alt={appointment.person.name} />\n\n                                    <strong> {appointment.person.name}</strong>\n                                </div>\n                            </Appointment>\n                        ))}\n\n                    </Section>\n\n                    <Section>\n                        <strong>Tarde</strong>\n\n                        {afternoonAppointments.length === 0 && (\n                            <p>Nenhum agendamento neste período</p>\n                        )}\n\n                        {afternoonAppointments.map(appointment => (\n                            <Appointment key={appointment.id}>\n                                <span>\n                                    <FiClock />\n                                    {appointment.hourFormatted}\n                                </span>\n\n                                <div>\n                                    <img src={'data:image/png;base64,' + appointment.person.avatar} alt={appointment.person.name} />\n\n                                    <strong> {appointment.person.name}</strong>\n                                </div>\n                            </Appointment>\n                        ))}\n\n                    </Section>\n\n                    <Section>\n                        <strong>Noite</strong>\n\n                        {eveningAppointments.length === 0 && (\n                            <p>Nenhum agendamento neste período</p>\n                        )}\n\n                        {eveningAppointments.map(appointment => (\n                            <Appointment key={appointment.id}>\n                                <span>\n                                    <FiClock />\n                                    {appointment.hourFormatted}\n                                </span>\n\n                                <div>\n                                    <img src={'data:image/png;base64,' + appointment.person.avatar} alt={appointment.person.name} />\n\n                                    <strong> {appointment.person.name}</strong>\n                                </div>\n                            </Appointment>\n                        ))}\n                    </Section>\n\n                </Schedule>\n                <Calendar>\n                    <DayPicker\n                        weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n                        fromMonth={new Date()}\n                        disabledDays={[{ daysOfWeek: [] }, ...disabledDays]}\n                        modifiers={{\n                            available: { daysOfWeek: [0, 1, 2, 3, 4, 5, 6] },\n                        }}\n                        onMonthChange={handleMonthChange}\n                        selectedDays={selectedDate}\n                        onDayClick={handleDateChange}\n                        months={[\n                            'Janeiro',\n                            'Fevereiro',\n                            'Março',\n                            'Abril',\n                            'Maio',\n                            'Junho',\n                            'Julho',\n                            'Agosto',\n                            'Setembro',\n                            'Outubro',\n                            'Novembro',\n                            'Dezembro',\n                        ]}\n                    />\n                </Calendar>\n            </Content>\n\n        </Container>\n    )\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}