{"ast":null,"code":"var _jsxFileName = \"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/routes/Route.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route as ReactDomRoute, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Route = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(ReactDomRoute, { ...rest,\n    render: ({\n      location\n    }) => {\n      return isPrivate === !!user ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: isPrivate ? '/' : '/dashboard',\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Route, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", true);\n\n_c = Route;\nexport default Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/acaciano/Projects/2a/55PBXTest/front-end/src/routes/Route.tsx"],"names":["React","Route","ReactDomRoute","Redirect","isPrivate","component","Component","rest","user","useAuth","location","pathname","state","from"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA2CC,KAAK,IAAIC,aAApD,EAAmEC,QAAnE,QAAmF,kBAAnF;;;AAOA,MAAMF,KAA2B,GAAG,CAAC;AAAEG,EAAAA,SAAS,GAAG,KAAd;AAAqBC,EAAAA,SAAS,EAAEC,SAAhC;AAA2C,KAAGC;AAA9C,CAAD,KAA0D;AAAA;;AAC1F,QAAM;AAAEC,IAAAA;AAAF,MAAWC,OAAO,EAAxB;AAEA,sBACI,QAAC,aAAD,OACQF,IADR;AAEI,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAkB;AACtB,aAAON,SAAS,KAAK,CAAC,CAACI,IAAhB,gBACH,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADG,gBAGH,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAEP,SAAS,GAAG,GAAH,GAAS,YAA9B;AAA4CQ,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAAnD;AAAd;AAAA;AAAA;AAAA;AAAA,cAHJ;AAKH;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhBD;;GAAMT,K;;KAAAA,K;AAkBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { RouteProps as ReactDomRouteProps, Route as ReactDomRoute, Redirect } from 'react-router-dom';\n\ninterface RouteProps extends ReactDomRouteProps {\n    isPrivate?: boolean,\n    component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({ isPrivate = false, component: Component, ...rest }) => {\n    const { user } = useAuth();\n\n    return (\n        <ReactDomRoute\n            {...rest}\n            render={({ location }) => {\n                return isPrivate === !!user ? (\n                    <Component />\n                ) : (\n                    <Redirect to={{ pathname: isPrivate ? '/' : '/dashboard', state: { from: location } }} />\n                )\n            }\n            }\n        />\n    )\n};\n\nexport default Route;"]},"metadata":{},"sourceType":"module"}