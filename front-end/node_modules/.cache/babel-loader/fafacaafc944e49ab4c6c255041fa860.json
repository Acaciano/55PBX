{"ast":null,"code":"var _jsxFileName = \"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/ForgotPassword/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport api from '../../services/api';\nimport { Container, Content, AnimationContainer, Background } from './styles';\nimport logo from \"../../assets/logo.svg\";\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useToast } from '../../hooks/toast';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      setLoading(true);\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail é obrigatório').email('Digite um e-mail vãlido!')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('v1/account/forgotPassword', {\n        email: data.email\n      });\n      addToast({\n        type: 'success',\n        title: 'E-mail de recuperação envido',\n        description: 'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        if (errors) (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      } else {\n        addToast({\n          type: 'error',\n          title: 'Erro na recuperação de senha!',\n          description: 'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.'\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [ForgotPassword, addToast]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(AnimationContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"GoBarber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          ref: formRef,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Recuperar senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            icon: FiMail,\n            type: \"text\",\n            placeholder: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            loading: loading,\n            type: \"submit\",\n            children: \"Recuperar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(FiLogIn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), \"Voltar ao login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgotPassword, \"xtj3p1ZZF72z+nK+vK/onYSydIM=\", false, function () {\n  return [useToast];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/ForgotPassword/index.tsx"],"names":["React","useCallback","useRef","useState","FiLogIn","FiMail","Form","Yup","getValidationErrors","api","Container","Content","AnimationContainer","Background","Input","Button","useToast","Link","ForgotPassword","loading","setLoading","formRef","addToast","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","validate","abortEarly","post","type","title","description","err","ValidationError","errors","logo"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useContext, useState } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi'\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\n\nimport * as Yup from 'yup';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport api from '../../services/api';\n\nimport { Container, Content, AnimationContainer, Background } from './styles'\nimport logo from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { useToast } from '../../hooks/toast';\nimport { Link, useHistory } from 'react-router-dom';\n\ninterface ForgotPasswordFormData {\n    email: string\n}\n\nconst ForgotPassword: React.FC = () => {\n\n    const [loading, setLoading] = useState(false);\n\n    const formRef = useRef<FormHandles>(null);\n    const { addToast } = useToast();\n\n    const handleSubmit = useCallback(async (data: ForgotPasswordFormData) => {\n        try {\n            setLoading(true);\n            formRef.current?.setErrors({});\n\n            const schema = Yup.object().shape({\n                email: Yup.string().required('E-mail é obrigatório').email('Digite um e-mail vãlido!')\n            });\n\n            await schema.validate(data, {\n                abortEarly: false\n            });\n\n            await api.post('v1/account/forgotPassword', {\n                email: data.email\n            });\n\n            addToast({\n                type: 'success',\n                title: 'E-mail de recuperação envido',\n                description: 'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada'\n            });\n        } catch (err) {\n\n            if (err instanceof Yup.ValidationError) {\n                const errors = getValidationErrors(err);\n\n                if (errors) formRef.current?.setErrors(errors);\n\n                return;\n            } else {\n                addToast({\n                    type: 'error',\n                    title: 'Erro na recuperação de senha!',\n                    description: 'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.'\n                });\n            }\n        } finally {\n            setLoading(false);\n        }\n    }, [ForgotPassword, addToast]);\n\n    return (\n        <Container>\n            <Content>\n                <AnimationContainer>\n                    <img src={logo} alt=\"GoBarber\" />\n\n                    <Form ref={formRef} onSubmit={handleSubmit}>\n                        <h1>Recuperar senha</h1>\n\n                        <Input name=\"email\" icon={FiMail} type=\"text\" placeholder=\"E-mail\" />\n\n                        <Button loading={loading} type=\"submit\">Recuperar</Button>\n                    </Form>\n\n                    <Link to=\"/\">\n                        <FiLogIn />\n                    Voltar ao login\n                </Link>\n                </AnimationContainer>\n            </Content>\n\n            <Background />\n        </Container>\n    );\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}