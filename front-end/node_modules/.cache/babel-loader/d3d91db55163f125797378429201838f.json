{"ast":null,"code":"var _jsxFileName = \"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/hooks/auth.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuthState {\n  constructor(token, user) {\n    this.token = void 0;\n    this.user = void 0;\n    this.token = token;\n    this.user = user;\n  }\n\n}\n\nconst AuthContext = /*#__PURE__*/createContext({});\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState(() => {\n    const token = sessionStorage.getItem('@SGBarber:token');\n    const user = sessionStorage.getItem('@SGBarber:user');\n\n    if (token && user) {\n      const userData = JSON.parse(user);\n      api.defaults.headers.authorization = `Bearer ${token}`;\n      return {\n        token,\n        user: userData\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('v1/account/singIn', {\n      email,\n      password\n    });\n\n    if (response && response.data && response.data.success) {\n      const auth = new AuthState(data.token, response.data.data);\n      sessionStorage.setItem('@SGBarber:token', response.data.data.token);\n      sessionStorage.setItem('@SGBarber:user', JSON.stringify(response.data.data));\n      api.defaults.headers.authorization = `Bearer ${response.data.data.token}`;\n      setData(auth);\n    }\n  }, []);\n  const signOut = useCallback(() => {\n    sessionStorage.removeItem('@SGBarber:token');\n    sessionStorage.removeItem('@SGBarber:user');\n    setData({});\n  }, []);\n  const updateUser = useCallback(updateData => {\n    sessionStorage.setItem('@SGBarber:user', JSON.stringify(updateData));\n    setData({\n      token: data.token,\n      user: { ...data.user,\n        ...updateData\n      }\n    });\n  }, [setData, data.token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn,\n      signOut,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthProvider, \"Goczz30OqRktVZfvFTiVaUrKEc4=\");\n\n_c = AuthProvider;\n\nfunction useAuth() {\n  _s2();\n\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/acaciano/Projects/2a/55PBXTest/front-end/src/hooks/auth.tsx"],"names":["React","createContext","useCallback","useContext","useState","api","AuthState","constructor","token","user","AuthContext","AuthProvider","children","data","setData","sessionStorage","getItem","userData","JSON","parse","defaults","headers","authorization","signIn","email","password","response","post","success","auth","setItem","stringify","signOut","removeItem","updateUser","updateData","useAuth","context","Error"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from 'react';\nimport ResponseBase from '../models/ResponseBase';\nimport UserData from '../models/UserData';\nimport api from '../services/api';\n\nclass AuthState {\n    constructor(token: string, user: UserData) {\n        this.token = token;\n        this.user = user;\n    }\n\n    token: string;\n    user: UserData;\n}\n\ninterface SignInCredentials {\n    email: string,\n    password: string,\n}\n\ninterface AuthContextData {\n    user: UserData;\n    signIn(credentials: SignInCredentials): Promise<void>;\n    signOut(): void;\n    updateUser(user: UserData): void;\n}\n\nconst AuthContext = createContext<AuthContextData>(\n    {} as AuthContextData,\n);\n\nconst AuthProvider: React.FC = ({ children }) => {\n\n    const [data, setData] = useState<AuthState>(() => {\n        const token = sessionStorage.getItem('@SGBarber:token');\n        const user = sessionStorage.getItem('@SGBarber:user');\n\n        if (token && user) {\n            const userData = JSON.parse(user);\n            api.defaults.headers.authorization = `Bearer ${token}`;\n            return { token, user: userData }\n        }\n\n        return {} as AuthState;\n    });\n\n    const signIn = useCallback(async ({ email, password }) => {\n\n        const response = await api.post<ResponseBase<UserData>>('v1/account/singIn', {\n            email, password\n        });\n\n\n        if (response && response.data && response.data.success) {\n            const auth: AuthState = new AuthState(data.token, response.data.data);\n\n            sessionStorage.setItem('@SGBarber:token', response.data.data.token);\n            sessionStorage.setItem('@SGBarber:user', JSON.stringify(response.data.data));\n\n            api.defaults.headers.authorization = `Bearer ${response.data.data.token}`;\n\n            setData(auth);\n        }\n\n    }, []);\n\n    const signOut = useCallback(() => {\n        sessionStorage.removeItem('@SGBarber:token');\n        sessionStorage.removeItem('@SGBarber:user');\n\n        setData({} as AuthState);\n    }, []);\n\n    const updateUser = useCallback((updateData: UserData) => {\n\n        sessionStorage.setItem('@SGBarber:user', JSON.stringify(updateData));\n        setData({\n            token: data.token,\n            user: {\n                ...data.user,\n                ...updateData\n            }\n        });\n    }, [setData, data.token])\n\n    return (\n        <AuthContext.Provider value={{ user: data.user, signIn, signOut, updateUser }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nfunction useAuth(): AuthContextData {\n    const context = useContext(AuthContext);\n\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n\n    return context;\n}\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}