{"ast":null,"code":"var _jsxFileName = \"/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/ResetPassword/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef } from 'react';\nimport { FiLock, FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Container, Content, AnimationContainer, Background } from './styles';\nimport logo from \"../../assets/logo.svg\";\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useToast } from '../../hooks/toast';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const location = useLocation();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail é obrigatório').email('Digite um e-mail vãlido!'),\n        password: Yup.string().required('Nova senha obrigatório'),\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Nova senha e confirmação de senha não conferem.')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      const token = location.search.replace('?token=', '');\n\n      if (!token) {\n        addToast({\n          type: 'error',\n          title: 'Erro ao resetar senha',\n          description: 'Nenhum token foi informado!'\n        });\n        return;\n      }\n\n      await api.post('v1/account/changePassword/disconnected', {\n        newPassword: data.password,\n        confirmPassword: data.password,\n        token: token,\n        email: data.email\n      });\n      addToast({\n        type: 'success',\n        title: 'Senha alterada',\n        description: 'Senha alterada com sucesso, agora você já pode logar novamente.'\n      });\n      history.push('/');\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        if (errors) (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      } else {\n        addToast({\n          type: 'error',\n          title: 'Erro ao resetar senha',\n          description: 'Ocorreu um erro ao resetar sua senha, tente novamente.'\n        });\n      }\n    }\n  }, [addToast, history, location.search]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(AnimationContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"GoBarber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          ref: formRef,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Resetar senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            icon: FiMail,\n            type: \"text\",\n            placeholder: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            icon: FiLock,\n            type: \"password\",\n            placeholder: \"Nova senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            icon: FiLock,\n            type: \"password\",\n            placeholder: \"Confirma\\xE7\\xE3o da senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Alterar senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPassword, \"+NGt62pppWkoXTLFmEHdxZ10eLs=\", false, function () {\n  return [useToast, useHistory, useLocation];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/acaciano/Projects/2a/55PBXTest/front-end/src/pages/ResetPassword/index.tsx"],"names":["React","useCallback","useRef","FiLock","FiMail","Form","Yup","getValidationErrors","Container","Content","AnimationContainer","Background","Input","Button","useToast","useHistory","useLocation","api","ResetPassword","formRef","addToast","history","location","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","password","confirmPassword","oneOf","ref","validate","abortEarly","token","search","replace","type","title","description","post","newPassword","push","err","ValidationError","errors","logo"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { FiLock, FiMail } from 'react-icons/fi'\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\n\nimport * as Yup from 'yup';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport { Container, Content, AnimationContainer, Background } from './styles'\nimport logo from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { useToast } from '../../hooks/toast';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport api from '../../services/api';\n\ninterface ResetPasswordFormData {\n    email: string,\n    password: string,\n    confirmPassword: string,\n}\n\nconst ResetPassword: React.FC = () => {\n\n    const formRef = useRef<FormHandles>(null);\n    const { addToast } = useToast();\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleSubmit = useCallback(async (data: ResetPasswordFormData) => {\n        try {\n            formRef.current?.setErrors({});\n\n            const schema = Yup.object().shape({\n                email: Yup.string().required('E-mail é obrigatório').email('Digite um e-mail vãlido!'),\n                password: Yup.string().required('Nova senha obrigatório'),\n                confirmPassword: Yup.string().oneOf(\n                    [Yup.ref('password'), null], 'Nova senha e confirmação de senha não conferem.'\n                ),\n            });\n\n            await schema.validate(data, {\n                abortEarly: false\n            });\n\n            const token = location.search.replace('?token=', '');\n            if (!token) {\n                addToast({\n                    type: 'error',\n                    title: 'Erro ao resetar senha',\n                    description: 'Nenhum token foi informado!'\n                });\n\n                return;\n            }\n\n            await api.post('v1/account/changePassword/disconnected', {\n                newPassword: data.password,\n                confirmPassword: data.password,\n                token: token,\n                email: data.email\n            });\n\n            addToast({\n                type: 'success',\n                title: 'Senha alterada',\n                description: 'Senha alterada com sucesso, agora você já pode logar novamente.'\n            });\n\n            history.push('/');\n        } catch (err) {\n\n            if (err instanceof Yup.ValidationError) {\n                const errors = getValidationErrors(err);\n\n                if (errors) formRef.current?.setErrors(errors);\n\n                return;\n            } else {\n                addToast({\n                    type: 'error',\n                    title: 'Erro ao resetar senha',\n                    description: 'Ocorreu um erro ao resetar sua senha, tente novamente.'\n                });\n            }\n        }\n    }, [addToast, history, location.search]);\n\n    return (\n        <Container>\n\n            <Content>\n                <AnimationContainer>\n                    <img src={logo} alt=\"GoBarber\" />\n\n                    <Form ref={formRef} onSubmit={handleSubmit}>\n                        <h1>Resetar senha</h1>\n\n                        <Input name=\"email\" icon={FiMail} type=\"text\" placeholder=\"E-mail\" />\n                        <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Nova senha\" />\n                        <Input name=\"confirmPassword\" icon={FiLock} type=\"password\" placeholder=\"Confirmação da senha\" />\n\n                        <Button type=\"submit\">Alterar senha</Button>\n                    </Form>\n                </AnimationContainer>\n            </Content>\n\n            <Background />\n        </Container>\n    );\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}