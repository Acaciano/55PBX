{"ast":null,"code":"export default function getValidationErrors(err) {\n  const validationErrors = {};\n  err.inner.forEach(error => {\n    const valueName = error.path;\n\n    if (valueName) {\n      validationErrors[valueName] = error.message;\n    }\n  });\n  return validationErrors;\n}","map":{"version":3,"sources":["/Users/acaciano/Projects/2a/55PBXTest/front-end/src/utils/getValidationErrors.ts"],"names":["getValidationErrors","err","validationErrors","inner","forEach","error","valueName","path","message"],"mappings":"AAMA,eAAe,SAASA,mBAAT,CAA6BC,GAA7B,EAA2D;AACxE,QAAMC,gBAAwB,GAAG,EAAjC;AAEAD,EAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAmBC,KAAD,IAAW;AAC3B,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;;AAEA,QAAID,SAAJ,EAAe;AACbJ,MAAAA,gBAAgB,CAACI,SAAD,CAAhB,GAA8BD,KAAK,CAACG,OAApC;AACD;AACF,GAND;AAQA,SAAON,gBAAP;AACD","sourcesContent":["import { ValidationError } from \"yup\";\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    const valueName = error.path;\n\n    if (valueName) {\n      validationErrors[valueName] = error.message;\n    }\n  });\n\n  return validationErrors;\n}\n"]},"metadata":{},"sourceType":"module"}